.row{
  max-width: $grid-width; // standart = 1140 px -> rem (root => 10)
  //difference width max-width -> it does not get bigger than 1140px but
  //but if the viewport is smaller it will use 100% space it has.
  //background-color: #eee; makes the row visible
  margin: 0 auto; //center block elements inside of block elements


  &:not(:last-child){ //.row:not pseudo class
    margin-bottom: $gutter-vertical;
  }

  //.row:last-child() -> selecting the last last-child
  //in this example: Everything but the last child
  @include clearfix;

  [class^="col-"]{
    float: left;
    //background-color: orange; MAKE THE Tupples visible
    &:not(:last-child){
      margin-right: $gutter-horizontal;
    }
  }


  //attribute selector
  //^= -> selects everything that starts with col-
  // *= contains
  // =" ends

  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal})/2); //you can mix units here (css cannot do that)

    /*float: left;

    &:not(:last-child){
      margin-right: $gutter-horizontal;
    } DONT REPEAT YOURSELF*/
  }
}

.col-1-of-3{
  width: calc((100% - 2* #{$gutter-horizontal})/3);
}

.col-2-of-3{
  width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
}

.col-1-of-4{
  width: calc((100% - 3*#{$gutter-horizontal})/4);
}

.col-2-of-4{
  width: calc(2 * ((100% - 3*#{$gutter-horizontal})/4) + #{$gutter-horizontal});
}

.col-3-of-4{
  width: calc(3 * ((100% - 3*#{$gutter-horizontal})/4) + 2 * #{$gutter-horizontal});
}


//.row::after{}
